Int -> Int neg := /. x : Int => 0 - x ;
Int -> Int -> Int plus := /. x : Int => /. y : Int => x - neg(y);
Int -> Int abs := /.x : Int => if (x < 0) then neg(x) else x;
Int -> Int -> Int and := /. p : Int => /. q : Int => if p < 1 then -1 else if q < 1 then -1 else 1;
Int -> Int -> Int or := /. p : Int => /. q : Int => if 0 < p then 1 else if 0 < q then 1 else 0;
Int -> Int -> Int eq  := /. x : Int => /. y : Int => if 0 < abs(x-y) then -1 else 1;
Int -> Int -> Int gt  := /. x : Int => /. y : Int => if 0 < 0 < x-y then 1 else -1;
Int -> Int isZero := eq(0);
Int -> Int -> Int -> Int fiboP := /. n2 : Int =>  /. n1 : Int => /. x  : Int => if isZero(x) then n1 else fiboP(n1)(plus(n1)(n2));
Int -> Int fibo := fiboP(0)(1);
print(fibo(1));
print(fibo(2));
print(fibo(3));
print(fibo(4));
print(fibo(5));
print(fibo(6));
print(fibo(7));
print(fibo(8));
print(fibo(9));
print(fibo(10));